package com.zed.bagofood.model.product;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.Id;

import lombok.Data;

@Data
@Entity
public class ProductOf {

    @Id
    private String id;
    private String code;
    private String url;
    private String creator;
    private long created_t;
    private String created_datetime;
    private long last_modified_t;
    private String last_modified_datetime;
    private String product_name;
    private String generic_name;
    private String quantity;
    private String packaging;
    private String packaging_tags;
    private String brands;
    private String brands_tags;
    private String categories;
    private String categories_tags;
    private String categories_en;
    private String origins;
    private String origins_tags;
    private String manufacturing_places;
    private String manufacturing_places_tags;
    private String labels;
    private String labels_tags;
    private String labels_en;
    private String emb_codes;
    private String emb_codes_tags;
    private String first_packaging_code_geo;
    private String cities;
    private String cities_tags;
    private String purchase_places;
    private String stores;
    private String countries;
    private String countries_tags;
    private String countries_en;
    private String ingredients_text;
    private String allergens;
    private String allergens_en;
    private String traces;
    private String traces_tags;
    private String traces_en;
    private String serving_size;
    private String no_nutriments;
    private String additives_n;
    private String additives;
    private String additives_tags;
    private String additives_en;
    private String ingredients_from_palm_oil_n;
    private String ingredients_from_palm_oil;
    private String ingredients_from_palm_oil_tags;
    private String ingredients_that_may_be_from_palm_oil_n;
    private String ingredients_that_may_be_from_palm_oil;
    private String ingredients_that_may_be_from_palm_oil_tags;
    private String nutrition_grade_uk;
    private String nutrition_grade_fr;
    private String pnns_groups_1;
    private String pnns_groups_2;
    private String states;
    private String states_tags;
    private String states_en;
    private String main_category;
    private String main_category_en;
    private String image_url;
    private String image_small_url;
    private double energy_100g;
    private double fat_100g;
    private double saturated_fat_100g;
    private double butyric_acid_100g;
    private double caproic_acid_100g;
    private double caprylic_acid_100g;
    private double capric_acid_100g;
    private double lauric_acid_100g;
    private double myristic_acid_100g;
    private double palmitic_acid_100g;
    private double stearic_acid_100g;
    private double arachidic_acid_100g;
    private double behenic_acid_100g;
    private double lignoceric_acid_100g;
    private double cerotic_acid_100g;
    private double montanic_acid_100g;
    private double melissic_acid_100g;
    private double monounsaturated_fat_100g;
    private double polyunsaturated_fat_100g;
    private double omega_3_fat_100g;
    private double alpha_linolenic_acid_100g;
    private double eicosapentaenoic_acid_100g;
    private double docosahexaenoic_acid_100g;
    private double omega_6_fat_100g;
    private double linoleic_acid_100g;
    private double arachidonic_acid_100g;
    private double gamma_linolenic_acid_100g;
    private double dihomo_gamma_linolenic_acid_100g;
    private double omega_9_fat_100g;
    private double oleic_acid_100g;
    private double elaidic_acid_100g;
    private double gondoic_acid_100g;
    private double mead_acid_100g;
    private double erucic_acid_100g;
    private double nervonic_acid_100g;
    private double trans_fat_100g;
    private double cholesterol_100g;
    private double carbohydrates_100g;
    private double sugars_100g;
    private double sucrose_100g;
    private double glucose_100g;
    private double fructose_100g;
    private double lactose_100g;
    private double maltose_100g;
    private double maltodextrins_100g;
    private double starch_100g;
    private double polyols_100g;
    private double fiber_100g;
    private double proteins_100g;
    private double casein_100g;
    private double serum_proteins_100g;
    private double nucleotides_100g;
    private double salt_100g;
    private double sodium_100g;
    private double alcohol_100g;
    private double vitamin_a_100g;
    private double vitamin_d_100g;
    private double vitamin_e_100g;
    private double vitamin_k_100g;
    private double vitamin_c_100g;
    private double vitamin_b1_100g;
    private double vitamin_b2_100g;
    private double vitamin_pp_100g;
    private double vitamin_b6_100g;
    private double vitamin_b9_100g;
    private double vitamin_b12_100g;
    private double biotin_100g;
    private double pantothenic_acid_100g;
    private double silica_100g;
    private double bicarbonate_100g;
    private double potassium_100g;
    private double chloride_100g;
    private double calcium_100g;
    private double phosphorus_100g;
    private double iron_100g;
    private double magnesium_100g;
    private double zinc_100g;
    private double copper_100g;
    private double manganese_100g;
    private double fluoride_100g;
    private double selenium_100g;
    private double chromium_100g;
    private double molybdenum_100g;
    private double iodine_100g;
    private double caffeine_100g;
    private double taurine_100g;
    private double ph_100g;
    private double fruits_vegetables_nuts_100g;
    private double collagen_meat_protein_ratio_100g;
    private double carbon_footprint_100g;
    private double nutrition_score_fr_100g;
    private double nutrition_score_uk_100g; 


    public ProductOf(){
    }

    /**
     * Create a ProductOf from a list of parameters
     * @param listFields
     * @return
     */
    public static ProductOf createProductOf(List<String> listFields){

        int i=0;
        ProductOf p = new ProductOf();

        p.setCode(listFields.get(i++));
        p.setUrl(listFields.get(i++));
        p.setCreator(listFields.get(i++));
        p.setCreated_t(Long.parseLong(listFields.get(i++)));
        p.setCreated_datetime(listFields.get(i++));
        p.setLast_modified_t(Long.parseLong(listFields.get(i++)));
        p.setLast_modified_datetime(listFields.get(i++));
        p.setProduct_name(listFields.get(i++));
        p.setGeneric_name(listFields.get(i++));
        p.setQuantity(listFields.get(i++));
        
        p.setPackaging(listFields.get(i++));
        p.setPackaging_tags(listFields.get(i++));
        p.setBrands(listFields.get(i++));
        p.setBrands_tags(listFields.get(i++));
        p.setCategories(listFields.get(i++));
        p.setCategories_tags(listFields.get(i++));
        p.setCategories_en(listFields.get(i++));
        p.setOrigins(listFields.get(i++));
        p.setOrigins_tags(listFields.get(i++));
        p.setManufacturing_places(listFields.get(i++));
        p.setManufacturing_places_tags(listFields.get(i++));
        p.setLabels(listFields.get(i++));
        p.setLabels_tags(listFields.get(i++));
        p.setLabels_en(listFields.get(i++));
        p.setEmb_codes(listFields.get(i++));
        p.setEmb_codes_tags(listFields.get(i++));
        p.setFirst_packaging_code_geo(listFields.get(i++));
        p.setCities(listFields.get(i++));
        p.setCities_tags(listFields.get(i++));
        p.setPurchase_places(listFields.get(i++));
        p.setStores(listFields.get(i++));
        p.setCountries(listFields.get(i++));
        p.setCountries_tags(listFields.get(i++));
        p.setCountries_en(listFields.get(i++));
        p.setIngredients_text(listFields.get(i++));
        p.setAllergens(listFields.get(i++));
        p.setAllergens_en(listFields.get(i++));
        p.setTraces(listFields.get(i++));
        p.setTraces_tags(listFields.get(i++));
        p.setTraces_en(listFields.get(i++));
        p.setServing_size(listFields.get(i++));
        p.setNo_nutriments(listFields.get(i++));
        p.setAdditives_n(listFields.get(i++));
        p.setAdditives(listFields.get(i++));
        p.setAdditives_tags(listFields.get(i++));
        p.setAdditives_en(listFields.get(i++));
        p.setIngredients_from_palm_oil_n(listFields.get(i++));
        p.setIngredients_from_palm_oil(listFields.get(i++));
        p.setIngredients_from_palm_oil_tags(listFields.get(i++));
        p.setIngredients_that_may_be_from_palm_oil_n(listFields.get(i++));
        p.setIngredients_that_may_be_from_palm_oil(listFields.get(i++));
        p.setIngredients_that_may_be_from_palm_oil_tags(listFields.get(i++));
        p.setNutrition_grade_uk(listFields.get(i++));
        p.setNutrition_grade_fr(listFields.get(i++));
        p.setPnns_groups_1(listFields.get(i++));
        p.setPnns_groups_2(listFields.get(i++));
        p.setStates(listFields.get(i++));
        p.setStates_tags(listFields.get(i++));
        p.setStates_en(listFields.get(i++));
        p.setMain_category(listFields.get(i++));
        p.setMain_category_en(listFields.get(i++));
        p.setImage_url(listFields.get(i++));
        p.setImage_small_url(listFields.get(i++));
        
        p.setEnergy_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setFat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSaturated_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setButyric_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCaproic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCaprylic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCapric_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setLauric_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMyristic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPalmitic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setStearic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setArachidic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setBehenic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setLignoceric_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCerotic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMontanic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMelissic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMonounsaturated_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPolyunsaturated_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setOmega_3_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setAlpha_linolenic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setEicosapentaenoic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setDocosahexaenoic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setOmega_6_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setLinoleic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setArachidonic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setGamma_linolenic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setDihomo_gamma_linolenic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setOmega_9_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setOleic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setElaidic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setGondoic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMead_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setErucic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setNervonic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setTrans_fat_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCholesterol_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCarbohydrates_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSugars_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSucrose_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setGlucose_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setFructose_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setLactose_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMaltose_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMaltodextrins_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setStarch_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPolyols_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setFiber_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setProteins_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCasein_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSerum_proteins_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setNucleotides_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSalt_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSodium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setAlcohol_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_a_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_d_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_e_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_k_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_c_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_b1_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_b2_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_pp_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_b6_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_b9_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setVitamin_b12_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setBiotin_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPantothenic_acid_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSilica_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setBicarbonate_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPotassium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setChloride_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCalcium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPhosphorus_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setIron_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMagnesium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setZinc_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCopper_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setManganese_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setFluoride_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setSelenium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setChromium_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setMolybdenum_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setIodine_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCaffeine_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setTaurine_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setPh_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setFruits_vegetables_nuts_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCollagen_meat_protein_ratio_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setCarbon_footprint_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setNutrition_score_fr_100g(ProductOperations.parseDouble(listFields.get(i++)));
        p.setNutrition_score_uk_100g(ProductOperations.parseDouble(listFields.get(i++)));

        return p;
    }

}
